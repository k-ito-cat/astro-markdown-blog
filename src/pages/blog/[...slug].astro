---
import { getCollection, getEntry } from "astro:content";
import BaseLayout from "~/layouts/BaseLayout.astro";
import Article from "~/components/Article.astro";
import Navigation from "~/components/Navigation.astro";
import { PUBLISHED_STATUS } from "~/constants/publishedStatus";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => {
    return {
      params: { slug: post.slug },
    };
  });
}

const { slug } = Astro.params;
const post = await getEntry("posts", slug);

if (!post || post.data.status.includes(PUBLISHED_STATUS.PRIVATE))
  return Astro.redirect("/404");

const rendered = await post.render();
const { Content, headings } = rendered;
---

<BaseLayout title={`ブログ｜${post.data.title}`}>
  <main class="relative mx-auto max-w-[1200px] bg-transparent px-4 py-8">
    <a href="/"> 一覧に戻る </a>
    {
      post.data.status.includes(PUBLISHED_STATUS.DRAFT) ? (
        <Article
          title={post.data.title}
          publishedAt={post.data.publishedAt}
          categories={post.data.categories}
          thumbnail={post.data.thumbnail}
          githubUrl={post.data.githubUrl}
          content={Content}
          headings={headings}
          status={post.data.status}
        />
      ) : (
        <div
          class:list={[
            {
              "grid gap-4 lg:grid-cols-[minmax(0,auto)_30%]":
                headings.length > 0,
            },
          ]}
        >
          <Navigation headings={headings} />
          <Article
            title={post.data.title}
            publishedAt={post.data.publishedAt}
            categories={post.data.categories}
            thumbnail={post.data.thumbnail}
            githubUrl={post.data.githubUrl}
            content={Content}
            headings={headings}
            status={post.data.status}
          />
        </div>
      )
    }
  </main>
</BaseLayout>
